#!/bin/bash

for p in . ./ftqV110/ftq ./ftq; do
   [ -x "$p/ftq" -a -f "$p/fwq" ] && FTQ_D="$p" && break
done
[ -n "$FTQ_D" ] || { echo "need to set FTQ_D"; exit 1; }

outd="${1:-out.d}"
N="${2:-2000000}"
mhz=$(awk '$0 ~ /cpu MHz/ { print $4; exit(0); }' /proc/cpuinfo )
bits_full=$(echo "l(0.001*$mhz*10^6/380)/l(2)" | bc -l)
bits_floor=${bits_full%.*}

out_d="$1"
mkdir -p "$outd"
lscpu > "$outd/lscpu"
threads=$(awk '$0 ~ /^Thread.* per core/ { print $4 }' "$outd/lscpu")
cores=$(awk '$0 ~ /^Core.* per socket/ { print $4 }' "$outd/lscpu")
sockets=$(awk '$0 ~ /^Socket.*/ { print $2 }' "$outd/lscpu")
printf "mhz=%s threads=%s cores=%s sockets=%s bits=%s\n" \
   "$mhz" "$threads" "$cores" "$sockets" "$bits_full" > "$outd/info"
cat /proc/cpuinfo > "${outd}/cpuinfo"

run() {
   local st=${SECONDS} ret=0
   echo "$@" 1>&2
   "$@"
   ret=$?
   echo "$ret: [$(($SECONDS-$st))s]"
   return $ret
}

PATH=$FTQ_D:$PATH

nthreads=$(($threads*$cores*$sockets))
[ "$nthreads" == "1" ] && nthreads=2

cat "$outd/info"
sstart=${SECONDS}
for bits in ${bits_floor} $((${bits_floor}+1)); do
	run ftq -o "${outd}/ftq-$bits-$N" -i "$bits" -n "$N"
	run fwq -o "${outd}/fwq-$bits-$N" -w "$bits" -n "$N"

	run t_ftq -o "${outd}/t_ftq-$bits-$N-$nthreads" -t $nthreads -i "$bits" -n "$N"
	run t_fwq -o "${outd}/t_fwq-$bits-$N-$nthreads" -t $nthreads -w "$bits" -n "$N"
done
end=${SECONDS}
echo "took $(($end-$sstart))s"
